// --- –í–ê–ñ–õ–ò–í–ï –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ---
const SCRIPT_URL = "https://script.google.com/macros/s/AKfycbyFlBN5_L1dr0fncI39EZuMoxnBqtW03g1--BkU9IosROoSxgqqRlTFFFrdp7GZN22M/exec";
// ------------------------------

document.addEventListener('DOMContentLoaded', function() {
    const tg = window.Telegram.WebApp;
    tg.expand();

    const territoryList = document.getElementById('territory-list');
    const loader = document.getElementById('loader');
    const filterUrbanBtn = document.getElementById('filter-urban');
    const filterRuralBtn = document.getElementById('filter-rural');
    let allTerritories = [];
    
    function displayTerritories(filter) {
        territoryList.innerHTML = '';
        const filtered = allTerritories.filter(t => t.type === filter);

        if (filtered.length === 0) {
            territoryList.innerHTML = '<p>–í—ñ–ª—å–Ω–∏—Ö —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π —Ü—å–æ–≥–æ —Ç–∏–ø—É –Ω–µ–º–∞—î.</p>';
            return;
        }

        filtered.forEach(t => {
            const item = document.createElement('div');
            item.className = 'territory-item';
            
            const photoBlock = t.photoUrl
                ? `<img class="territory-photo" src="${t.photoUrl}" alt="–§–æ—Ç–æ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó">`
                : `<div class="placeholder-photo">–ù–µ–º–∞—î —Ñ–æ—Ç–æ</div>`;

            item.innerHTML = `
                <div class="territory-title">üìç ${t.id}. ${t.name}</div>
                <div class="territory-content">
                    ${photoBlock}
                    <button class="btn-book" data-id="${t.id}">‚úÖ –û–±—Ä–∞—Ç–∏</button>
                </div>
            `;
            territoryList.appendChild(item);
        });

        document.querySelectorAll('.btn-book').forEach(button => {
            button.addEventListener('click', function() {
                const territoryId = this.dataset.id;
                const userId = tg.initDataUnsafe.user.id;
                
                tg.showConfirm(`–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∑—è—Ç–∏ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—é ${territoryId}?`, (isConfirmed) => {
                    if (isConfirmed) {
                        tg.showPopup({title: '–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è...', message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ.'});

                        fetch(`${SCRIPT_URL}?action=book&territoryId=${territoryId}&userId=${userId}`)
                            .then(response => response.json())
                            .then(result => {
                                if (result.ok) {
                                    tg.showPopup({title: '–£—Å–ø—ñ—Ö!', message: result.message});
                                    button.closest('.territory-item').classList.add('booked');
                                } else {
                                    tg.showAlert(result.message);
                                }
                            })
                            .catch(error => tg.showAlert(`–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: ${error.message}`));
                    }
                });
            });
        });
    }

    loader.style.display = 'block';
    fetch(SCRIPT_URL)
        .then(response => response.json())
        .then(data => {
            loader.style.display = 'none';
            if (data.ok) {
                allTerritories = data.territories;
                displayTerritories('–º—ñ—Å—å–∫–∞');
            } else {
                territoryList.innerHTML = `<p>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö: ${data.error}</p>`;
            }
        })
        .catch(error => {
            loader.style.display = 'none';
            territoryList.innerHTML = `<p>–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: ${error.message}</p>`;
        });

    // --- –í–ò–ü–†–ê–í–õ–ï–ù–û: –î–æ–¥–∞–Ω–æ –ª–æ–≥—ñ–∫—É –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ ---
    filterUrbanBtn.addEventListener('click', () => {
        displayTerritories('–º—ñ—Å—å–∫–∞');
        filterUrbanBtn.classList.add('active');
        filterRuralBtn.classList.remove('active');
    });

    filterRuralBtn.addEventListener('click', () => {
        displayTerritories('—Å—ñ–ª—å—Å—å–∫–∞');
        filterRuralBtn.classList.add('active');
        filterUrbanBtn.classList.remove('active');
    });
    // ------------------------------------------
});
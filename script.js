const SCRIPT_URL = "https://script.google.com/macros/s/AKfycbyFlBN5_L1dr0fncI39EZuMoxnBqtW03g1--BkU9IosROoSxgqqRlTFFFrdp7GZN22M/exec";

document.addEventListener('DOMContentLoaded', function() {
    const tg = window.Telegram.WebApp;
    tg.expand();

    const loader = document.getElementById('loader');
    const myTerritoryList = document.getElementById('my-territory-list');
    const freeTerritoryList = document.getElementById('territory-list');
    const freeTerritoriesTitle = document.getElementById('free-territories-title');
    
    let allFreeTerritories = [];
    const userId = tg.initDataUnsafe.user.id;

    // --- –õ–û–ì–Ü–ö–ê –î–õ–Ø –í–ö–õ–ê–î–û–ö ---
    const tabs = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            tabs.forEach(item => item.classList.remove('active'));
            tab.classList.add('active');
            const targetTab = document.getElementById(tab.dataset.tab);
            tabContents.forEach(content => content.classList.remove('active'));
            targetTab.classList.add('active');
        });
    });

    // --- –õ–û–ì–Ü–ö–ê –î–õ–Ø –§–Ü–õ–¨–¢–†–Ü–í ---
    const filterButtons = document.querySelectorAll('.filter-btn');
    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            filterButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            const filter = button.dataset.filter;
            displayFreeTerritories(filter);
        });
    });

    // --- –ù–û–í–ê –§–£–ù–ö–¶–Ü–Ø: –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–ª–∏—à–∫—É –¥–Ω—ñ–≤ ---
    function calculateDaysRemaining(assignDate) {
        if (!assignDate) return null;
        const assigned = new Date(assignDate);
        const today = new Date();
        const deadline = new Date(assigned.setDate(assigned.getDate() + 120));
        const diffTime = deadline - today;
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        return diffDays > 0 ? diffDays : 0;
    }

    // --- –§–£–ù–ö–¶–Ü–á –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø ---
    function displayMyTerritories(territories) {
        myTerritoryList.innerHTML = '';
        if (territories.length === 0) {
            myTerritoryList.innerHTML = '<p>–ù–∞ –¥–∞–Ω–∏–π —á–∞—Å –≤–∏ –Ω–µ –º–∞—î—Ç–µ –∂–æ–¥–Ω–æ—ó —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó.</p>';
            return;
        }
        territories.forEach(t => {
            const item = document.createElement('div');
            item.className = 'territory-item';

            const remainingDays = calculateDaysRemaining(t.date_assigned);
            let daysBlock = '';
            if (remainingDays !== null) {
                const endingSoonClass = remainingDays <= 30 ? 'ending-soon' : '';
                daysBlock = `<div class="days-remaining ${endingSoonClass}">–ó–∞–ª–∏—à–∏–ª–æ—Å—å –¥–Ω—ñ–≤: ${remainingDays}</div>`;
            }

            const photoBlock = t.picture_id ? `<img class="territory-photo" src="./images/${t.picture_id}" alt="–§–æ—Ç–æ">` : `<div class="placeholder-photo">–ù–µ–º–∞—î —Ñ–æ—Ç–æ</div>`;
            
            item.innerHTML = `
                <div class="territory-title">üìç ${t.id}. ${t.name}</div>
                <div class="territory-content">
                    ${photoBlock}
                    <button class="btn-return" data-id="${t.id}">‚Ü©Ô∏è –ó–¥–∞—Ç–∏</button>
                </div>
                ${daysBlock}
            `;
            myTerritoryList.appendChild(item);
        });
        addReturnListeners();
    }

    function displayFreeTerritories(filter) {
        freeTerritoryList.innerHTML = '';
        freeTerritoriesTitle.style.display = 'block';
        
        const filtered = allFreeTerritories.filter(t => t.type === filter);

        if (filtered.length === 0) {
            freeTerritoryList.innerHTML = '<p>–í—ñ–ª—å–Ω–∏—Ö —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π —Ü—å–æ–≥–æ —Ç–∏–ø—É –Ω–µ–º–∞—î.</p>';
            return;
        }

        filtered.forEach(t => {
            const item = document.createElement('div');
            item.className = 'territory-item';
            const photoBlock = t.picture_id ? `<img class="territory-photo" src="./images/${t.picture_id}" alt="–§–æ—Ç–æ">` : `<div class="placeholder-photo">–ù–µ–º–∞—î —Ñ–æ—Ç–æ</div>`;
            item.innerHTML = `
                <div class="territory-title">üìç ${t.id}. ${t.name}</div>
                <div class="territory-content">
                    ${photoBlock}
                    <button class="btn-book" data-id="${t.id}">‚úÖ –û–±—Ä–∞—Ç–∏</button>
                </div>
            `;
            freeTerritoryList.appendChild(item);
        });
        addBookingListeners();
    }

    // --- –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–î–Ü–ô ---
    function addReturnListeners() { /* ... –±–µ–∑ –∑–º—ñ–Ω ... */ }
    function addBookingListeners() { /* ... –±–µ–∑ –∑–º—ñ–Ω ... */ }

    // --- –§–£–ù–ö–¶–Ü–á –ó–í'–Ø–ó–ö–£ –ó API ---
    function returnTerritory(territoryId) { /* ... –±–µ–∑ –∑–º—ñ–Ω ... */ }

    function bookTerritory(territoryId) {
        tg.MainButton.setText("–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è...").show().enable();
        fetch(`${SCRIPT_URL}?action=bookTerritory&territoryId=${territoryId}&userId=${userId}`)
            .then(response => response.json())
            .then(result => {
                tg.MainButton.hide();
                if (result.ok) {
                    // --- –ó–ú–Ü–ù–ï–ù–û: –î–æ–¥–∞–Ω–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ---
                    const successMessage = result.message + "\n\n–ü–∞–º'—è—Ç–∞–π—Ç–µ, —â–æ —Ç–µ—Ä–º—ñ–Ω –æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó - 4 –º—ñ—Å—è—Ü—ñ.";
                    tg.showAlert(successMessage);
                    fetchAllData();
                } else {
                    tg.showAlert(result.message);
                }
            })
            .catch(error => {
                tg.MainButton.hide();
                tg.showAlert(`–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: ${error.message}`);
            });
    }

    // --- –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –î–ê–ù–ò–• ---
    function fetchAllData() { /* ... –±–µ–∑ –∑–º—ñ–Ω ... */ }
    
    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
    fetchAllData();
});

// --- –ü–û–í–ù–ò–ô –ö–û–î –†–ï–®–¢–ò –§–£–ù–ö–¶–Ü–ô ---
function addReturnListeners() {
    document.querySelectorAll('.btn-return').forEach(button => {
        button.addEventListener('click', function() {
            const territoryId = this.dataset.id;
            tg.showConfirm(`–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –∑–¥–∞—Ç–∏ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—é ${territoryId}?`, (isConfirmed) => {
                if (isConfirmed) {
                    returnTerritory(territoryId);
                }
            });
        });
    });
}
function addBookingListeners() {
    document.querySelectorAll('.btn-book').forEach(button => {
        button.addEventListener('click', function() {
            const territoryId = this.dataset.id;
            tg.showConfirm(`–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∑—è—Ç–∏ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—é ${territoryId}?`, (isConfirmed) => {
                if (isConfirmed) {
                    bookTerritory(territoryId);
                }
            });
        });
    });
}
function returnTerritory(territoryId) {
    tg.MainButton.setText("–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è...").show().enable();
    fetch(`${SCRIPT_URL}?action=returnTerritory&territoryId=${territoryId}&userId=${userId}`)
        .then(response => response.json())
        .then(result => {
            tg.MainButton.hide();
            if (result.ok) {
                tg.showAlert(result.message);
                fetchAllData();
            } else {
                tg.showAlert(result.message);
            }
        })
        .catch(error => {
            tg.MainButton.hide();
            tg.showAlert(`–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: ${error.message}`);
        });
}
function fetchAllData() {
    loader.style.display = 'block';
    myTerritoryList.innerHTML = '';
    freeTerritoryList.innerHTML = '';
    freeTerritoriesTitle.style.display = 'none';
    
    fetch(`${SCRIPT_URL}?action=getMyTerritories&userId=${userId}`)
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                displayMyTerritories(data.territories);
            }
        });

    fetch(SCRIPT_URL)
        .then(response => response.json())
        .then(data => {
            loader.style.display = 'none';
            if (data.ok) {
                allFreeTerritories = data.territories;
                const activeFilter = document.querySelector('.filter-btn.active');
                if (activeFilter) {
                    displayFreeTerritories(activeFilter.dataset.filter);
                }
            } else {
                document.body.innerHTML = `<p>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö: ${data.error}</p>`;
            }
        });
}
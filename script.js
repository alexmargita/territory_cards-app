// --- –í–ê–ñ–õ–ò–í–ï –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ---
const SCRIPT_URL = "–°–Æ–î–ò_–í–°–¢–ê–í–ò–¢–ò_URL_–ê–î–†–ï–°–£_–í–ê–®–û–ì–û_–í–ï–ë_–î–û–î–ê–¢–ö–£";
// ------------------------------

document.addEventListener('DOMContentLoaded', function() {
    const tg = window.Telegram.WebApp;
    tg.expand();

    const territoryList = document.getElementById('territory-list');
    const loader = document.getElementById('loader');
    const filterUrbanBtn = document.getElementById('filter-urban');
    const filterRuralBtn = document.getElementById('filter-rural');
    let allTerritories = [];
    
    function displayTerritories(filter) {
        territoryList.innerHTML = '';
        const filtered = allTerritories.filter(t => t.type === filter);

        if (filtered.length === 0) {
            territoryList.innerHTML = '<p>–í—ñ–ª—å–Ω–∏—Ö —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π —Ü—å–æ–≥–æ —Ç–∏–ø—É –Ω–µ–º–∞—î.</p>';
            return;
        }

        filtered.forEach(t => {
            const item = document.createElement('div');
            item.className = 'territory-item';
            
            // --- –ù–û–í–ê –ó–ú–Ü–ù–ê: –ë—É–¥—É—î–º–æ —à–ª—è—Ö –¥–æ —Ñ–æ—Ç–æ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ ---
            const photoBlock = t.picture_id
                ? `<img class="territory-photo" src="./images/${t.picture_id}" alt="–§–æ—Ç–æ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó">`
                : `<div class="placeholder-photo">–ù–µ–º–∞—î —Ñ–æ—Ç–æ</div>`;
            // ------------------------------------------

            item.innerHTML = `
                <div class="territory-title">üìç ${t.id}. ${t.name}</div>
                <div class="territory-content">
                    ${photoBlock}
                    <button class="btn-book">‚úÖ –û–±—Ä–∞—Ç–∏</button>
                </div>
            `;
            territoryList.appendChild(item);
        });
    }

    loader.style.display = 'block';
    fetch(SCRIPT_URL)
        .then(response => response.json())
        .then(data => {
            loader.style.display = 'none';
            if (data.ok) {
                allTerritories = data.territories;
                displayTerritories('–º—ñ—Å—å–∫–∞');
            } else {
                territoryList.innerHTML = `<p>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö: ${data.error}</p>`;
            }
        })
        .catch(error => {
            loader.style.display = 'none';
            territoryList.innerHTML = `<p>–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: ${error.message}</p>`;
        });

    filterUrbanBtn.addEventListener('click', () => {
        displayTerritories('–º—ñ—Å—å–∫–∞');
        filterUrbanBtn.classList.add('active');
        filterRuralBtn.classList.remove('active');
    });

    filterRuralBtn.addEventListener('click', () => {
        displayTerritories('—Å—ñ–ª—å—Å—å–∫–∞');
        filterRuralBtn.classList.add('active');
        filterUrbanBtn.classList.remove('active');
    });
});